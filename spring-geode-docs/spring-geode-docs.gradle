apply plugin: 'io.spring.convention.docs'
apply plugin: 'io.spring.convention.spring-test'

apply from: IDE_GRADLE

dependencies {

	compile project(':spring-geode-starter')

	runtime 'org.springframework.shell:spring-shell'

	testCompile "junit:junit"
	testCompile "org.assertj:assertj-core"
	testCompile "org.mockito:mockito-core"
	testCompile "edu.umd.cs.mtc:multithreadedtc"
	testCompile "org.springframework:spring-test"

}

def versions = dependencyManagement.managedVersions

asciidoctor {

	def githubBaseUrl = "https://github.com/spring-projects/spring-boot-data-geode"
	def githubTag = snapshotBuild ? 'master' : project.version
	def githubUrl = "$githubBaseUrl/tree/$githubTag"

	attributes 'version-snapshot': snapshotBuild,
		'version-milestone': milestoneBuild,
		'version-release': releaseBuild,
		'github-url': githubUrl,
		'download-url' : "${githubBaseUrl}/archive/${githubTag}.zip",
		'spring-version' : versions['org.springframework:spring-core'],
		'spring-boot-version' : "${springBootVersion}",
		'spring-boot-data-geode-version' : project.version,
		'spring-data-commons-version' : "${springDataReleaseTrainVersion}",
		'spring-data-gemfire-version' : "${springDataGemFireVersion}",
		'spring-data-geode-version' : "${springDataGeodeVersion}",
		'docs-test-dir' : rootProject.projectDir.path + '/docs/src/test/java/',
		'docs-test-resources-dir' : rootProject.projectDir.path + '/docs/src/test/resources/',
		'docs-itest-dir' : rootProject.projectDir.path + '/docs/src/integration-test/java/',
		'samples-dir' : rootProject.projectDir.path + '/samples/'
}

javadoc {
	configure(options) {
		links = [
			"http://docs.spring.io/spring/docs/current/javadoc-api/",
			"https://docs.spring.io/spring-boot/docs/current/api/",
			"http://docs.spring.io/spring-data/commons/docs/current/api/",
			"https://docs.spring.io/spring-data/geode/docs/current/api/",
			"http://docs.spring.io/spring-boot-data-geode/docs/${project.version}/api/",
			"http://geode.apache.org/releases/latest/javadoc/",
		]
	}
}
